% THIS FILE IS AUTOMATICALLY GENERATED.
% DO NOT EDIT; ALL CHANGES WILL BE LOST!

:- mode '_$member'(?,?).
:- mode abscomma_memberchk(?,?).
:- mode append(?,?,?).
:- mode between(+,+,?).
:- mode between_1(+,+,?).
:- mode bintree1(?,?,?,+).
:- mode bintree2(+,?,?,+).
:- mode bintree3(?,?,?,+).
:- mode comma_append(?,?,?).
:- mode comma_length(?,?).
:- mode comma_member(?,?).
:- mode comma_memberchk(?,?).
:- mode comma_to_list(?,?).
:- mode copy_term(?,?).
:- mode copy_term(?,?,?).
:- mode copy_term_nat(?,?).
:- mode flatten(?,?).
:- mode flatten1(?,?,?).
:- mode for(?,+,+).
:- mode fordown(?,+,+).
:- mode forup(?,+,+).
:- mode ground(?).
:- mode ith(?,?,?).
:- mode ith0(+,?,?).
:- mode ith1(?,+,?,?).
:- mode ktree0(+,+,?,?,+).
:- mode length(?,?).
:- mode length1(?,+,?).
:- mode length2(?,+).
:- mode list_hist(?,?,?,?).
:- mode list_hist_1(?,+,+,+,+,?).
:- mode list_valcount(?,?).
:- mode list_valcount_1(?,?,+,?).
:- mode log_ith(?,?,?).
:- mode log_ith0(+,?,?,+).
:- mode log_ith1(?,?,?,+).
:- mode log_ith2(+,?,?,+).
:- mode log_ith3(?,?,?,+).
:- mode log_ith_bound(?,?,?).
:- mode log_ith_new(?,?,?).
:- mode log_ith_new_d(?,?,?,+,?).
:- mode log_ith_new_o(?,?,?,+,+).
:- mode log_ith_to_list(?,?).
:- mode log_ith_to_list(?,+,?,+).
:- mode log_ith_to_list_btree(?,+,?,?).
:- mode logk_ith(+,+,?,?).
:- mode logk_ith0(+,+,?,?,+).
:- mode member(?,?).
:- mode memberchk(?,?).
:- mode perm(?,?).
:- mode reverse(?,?).
:- mode reverse_acc(?,?,?).
:- mode select(?,?,?).
:- mode subseq(?,?,?).
:- mode subset(+,+).

:- mode_on_success '_$member'(g,A).
:- mode_on_success '_$member'(ng,ng).
:- mode_on_success abscomma_memberchk(A,g).
:- mode_on_success abscomma_memberchk(A,A).
:- mode_on_success abscomma_memberchk(ng,A).
:- mode_on_success append(g,A,A).
:- mode_on_success append(ng,A,ng).
:- mode_on_success between(g,g,g).
:- mode_on_success between_1(g,g,g).
:- mode_on_success bintree1(g,A,g,g).
:- mode_on_success bintree1(g,A,A,g).
:- mode_on_success bintree1(g,ng,A,g).
:- mode_on_success bintree2(g,A,g,g).
:- mode_on_success bintree2(g,A,A,g).
:- mode_on_success bintree2(g,ng,A,g).
:- mode_on_success bintree3(g,A,g,g).
:- mode_on_success bintree3(g,A,A,g).
:- mode_on_success bintree3(g,ng,A,g).
:- mode_on_success comma_append(A,g,A).
:- mode_on_success comma_append(g,A,A).
:- mode_on_success comma_append(ng,A,ng).
:- mode_on_success comma_length(A,g).
:- mode_on_success comma_member(A,A).
:- mode_on_success comma_member(A,ng).
:- mode_on_success comma_member(g,A).
:- mode_on_success comma_memberchk(A,A).
:- mode_on_success comma_memberchk(A,ng).
:- mode_on_success comma_memberchk(g,A).
:- mode_on_success comma_to_list(A,A).
:- mode_on_success copy_term(A,B).
:- mode_on_success copy_term(A,B,C).
:- mode_on_success copy_term_nat(A,B).
:- mode_on_success flatten(A,A).
:- mode_on_success flatten1(g,A,A).
:- mode_on_success flatten1(ng,ng,A).
:- mode_on_success for(g,g,g).
:- mode_on_success fordown(g,g,g).
:- mode_on_success forup(g,g,g).
:- mode_on_success ground(g).
:- mode_on_success ith(g,A,g).
:- mode_on_success ith(g,ng,ng).
:- mode_on_success ith0(g,A,g).
:- mode_on_success ith0(g,ng,ng).
:- mode_on_success ith1(A,g,g,g).
:- mode_on_success ith1(ng,g,g,ng).
:- mode_on_success ktree0(g,g,g,g,g).
:- mode_on_success ktree0(g,g,ng,A,g).
:- mode_on_success length(A,g).
:- mode_on_success length1(A,g,g).
:- mode_on_success length2(A,g).
:- mode_on_success list_hist(g,g,g,g).
:- mode_on_success list_hist_1(g,g,g,g,g,g).
:- mode_on_success list_valcount(A,A).
:- mode_on_success list_valcount_1(g,A,g,A).
:- mode_on_success list_valcount_1(ng,A,g,ng).
:- mode_on_success log_ith(g,A,g).
:- mode_on_success log_ith(g,ng,A).
:- mode_on_success log_ith1(g,A,g,g).
:- mode_on_success log_ith1(g,ng,A,g).
:- mode_on_success log_ith2(g,A,g,g).
:- mode_on_success log_ith2(g,ng,A,g).
:- mode_on_success log_ith3(g,A,g,g).
:- mode_on_success log_ith3(g,ng,A,g).
:- mode_on_success log_ith_bound(g,A,g).
:- mode_on_success log_ith_bound(g,ng,A).
:- mode_on_success log_ith_new(g,A,g).
:- mode_on_success log_ith_new(g,ng,A).
:- mode_on_success log_ith_new_d(A,B,B,g,g).
:- mode_on_success log_ith_new_d(A,B,g,g,g).
:- mode_on_success log_ith_new_d(A,ng,B,g,g).
:- mode_on_success log_ith_new_o(g,A,g,g,g).
:- mode_on_success log_ith_new_o(g,ng,A,g,g).
:- mode_on_success log_ith_to_list(A,g).
:- mode_on_success log_ith_to_list(ng,ng).
:- mode_on_success log_ith_to_list(A,g,g,g).
:- mode_on_success log_ith_to_list(ng,g,ng,g).
:- mode_on_success log_ith_to_list_btree(A,g,B,B).
:- mode_on_success log_ith_to_list_btree(ng,g,ng,A).
:- mode_on_success logk_ith(g,g,A,g).
:- mode_on_success logk_ith(g,g,ng,A).
:- mode_on_success logk_ith0(g,g,A,g,g).
:- mode_on_success logk_ith0(g,g,ng,A,g).
:- mode_on_success member(g,A).
:- mode_on_success member(ng,ng).
:- mode_on_success memberchk(g,A).
:- mode_on_success memberchk(ng,ng).
:- mode_on_success perm(A,A).
:- mode_on_success reverse(A,A).
:- mode_on_success reverse_acc(A,g,A).
:- mode_on_success reverse_acc(A,ng,ng).
:- mode_on_success select(g,A,A).
:- mode_on_success select(ng,ng,A).
:- mode_on_success subseq(A,g,A).
:- mode_on_success subseq(ng,ng,A).
:- mode_on_success subset(g,g).
