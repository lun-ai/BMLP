% THIS FILE IS AUTOMATICALLY GENERATED.
% DO NOT EDIT; ALL CHANGES WILL BE LOST!

:- mode add_new_clause(?,?).
:- mode add_new_clause(?,?,?).
:- mode add_new_clause1(?,?,+,?).
:- mode add_tree(?,?,+,?).
:- mode clause_listify(?,?).
:- mode clause_listify1(?,?,+).
:- mode def_prop(?).
:- mode dispose_symtab(?).
:- mode env_prop(?).
:- mode extract_symlist(?,?,?).
:- mode extract_symlist1(?,?,?).
:- mode get_and_inc_tabnum(?).
:- mode get_end_ith_bucket(?,?).
:- mode memberV(?,?).
:- mode props_match(?,?).
:- mode safe_sort_by_index(?,?).
:- mode sort_by_index(?,?).
:- mode sort_indices(?,?).
:- mode sym_category(?,?).
:- mode sym_complete(?).
:- mode sym_complete1(+,?,?,?).
:- mode sym_complete1(+,+,?,?).
:- mode sym_count(?,?).
:- mode sym_empty(?).
:- mode sym_env(?,?).
:- mode sym_find(+,+,?,?).
:- mode sym_findi(?,+,+,?).
:- mode sym_gen(?,?).
:- mode sym_gen1(?,?).
:- mode sym_index(?,?).
:- mode sym_insert(+,+,?,?,?).
:- mode sym_inserti(+,+,?,?,?,?).
:- mode sym_name(?,?,?).
:- mode sym_offset(?,?).
:- mode sym_pass_thru(?).
:- mode sym_prop(?,?).
:- mode sym_prop0(?,?).
:- mode sym_propin(?,?).
:- mode sym_propin(?,?,?,?).
:- mode sym_propin1(?,?,?,?).
:- mode sym_scan(?,?,?).
:- mode sym_type(?,?).
:- mode tree_listify(?,?,?).
:- mode typ_prop(?).
:- mode use_prop(?).

:- mode_on_success add_new_clause(A,ng).
:- mode_on_success add_new_clause(g,A).
:- mode_on_success add_new_clause(A,ng,g).
:- mode_on_success add_new_clause(g,A,g).
:- mode_on_success add_new_clause1(A,ng,g,g).
:- mode_on_success add_new_clause1(g,A,g,g).
:- mode_on_success add_tree(A,A,g,g).
:- mode_on_success add_tree(A,ng,g,g).
:- mode_on_success add_tree(g,A,g,g).
:- mode_on_success clause_listify(A,g).
:- mode_on_success clause_listify(ng,ng).
:- mode_on_success clause_listify1(A,g,g).
:- mode_on_success clause_listify1(ng,ng,g).
:- mode_on_success def_prop(A).
:- mode_on_success dispose_symtab(A).
:- mode_on_success env_prop(A).
:- mode_on_success extract_symlist(A,g,B).
:- mode_on_success extract_symlist(A,ng,ng).
:- mode_on_success extract_symlist1(A,B,g).
:- mode_on_success extract_symlist1(ng,A,ng).
:- mode_on_success get_and_inc_tabnum(g).
:- mode_on_success get_end_ith_bucket(A,A).
:- mode_on_success get_end_ith_bucket(ng,A).
:- mode_on_success memberV(g,A).
:- mode_on_success memberV(ng,ng).
:- mode_on_success props_match(A,ng).
:- mode_on_success props_match(g,A).
:- mode_on_success safe_sort_by_index(A,B).
:- mode_on_success sort_by_index(A,g).
:- mode_on_success sort_by_index(ng,A).
:- mode_on_success sort_indices(A,A).
:- mode_on_success sym_category(A,g).
:- mode_on_success sym_category(ng,A).
:- mode_on_success sym_complete(A).
:- mode_on_success sym_complete1(g,g,A,B).
:- mode_on_success sym_count(A,g).
:- mode_on_success sym_empty(A).
:- mode_on_success sym_env(A,g).
:- mode_on_success sym_env(ng,A).
:- mode_on_success sym_find(g,g,A,g).
:- mode_on_success sym_find(g,g,ng,ng).
:- mode_on_success sym_findi(A,g,g,g).
:- mode_on_success sym_findi(ng,g,g,ng).
:- mode_on_success sym_gen(A,B).
:- mode_on_success sym_gen1(g,A).
:- mode_on_success sym_gen1(ng,ng).
:- mode_on_success sym_index(A,g).
:- mode_on_success sym_index(ng,ng).
:- mode_on_success sym_insert(g,g,A,ng,ng).
:- mode_on_success sym_insert(g,g,g,A,g).
:- mode_on_success sym_inserti(g,g,A,ng,ng,B).
:- mode_on_success sym_inserti(g,g,g,A,g,g).
:- mode_on_success sym_name(A,g,g).
:- mode_on_success sym_offset(A,g).
:- mode_on_success sym_pass_thru(g).
:- mode_on_success sym_prop(A,ng).
:- mode_on_success sym_prop(g,A).
:- mode_on_success sym_prop0(A,ng).
:- mode_on_success sym_prop0(g,A).
:- mode_on_success sym_propin(A,ng).
:- mode_on_success sym_propin(g,A).
:- mode_on_success sym_propin(A,ng,B,C).
:- mode_on_success sym_propin(g,A,B,C).
:- mode_on_success sym_propin1(A,ng,B,C).
:- mode_on_success sym_propin1(g,A,B,C).
:- mode_on_success sym_scan(A,ng,B).
:- mode_on_success sym_scan(g,A,A).
:- mode_on_success sym_scan(g,A,g).
:- mode_on_success sym_type(A,g).
:- mode_on_success sym_type(ng,ng).
:- mode_on_success tree_listify(A,B,B).
:- mode_on_success tree_listify(ng,ng,A).
:- mode_on_success typ_prop(g).
:- mode_on_success use_prop(g).
